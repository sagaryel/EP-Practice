service: employee-portal-service
provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1
  environment:
    EMPLOYEE_TABLE: ${self:custom.employeeTableName}
    ASSIGNMENTS_TABLE: ${self:custom.assignmentTableName}
    ASSETS_TABLE: ${self:custom.assetTableName}
    BANK_TABLE: ${self:custom.bankTableName}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:GetItem"
        - "dynamodb:Scan"
        - "dynamodb:DeleteItem"
        - "dynamodb:Query"
      Resource:
        - !GetAtt EmployeeTable.Arn
        - !GetAtt AssignmentTable.Arn
        - !GetAtt AssetTable.Arn
        - !GetAtt BankTable.Arn
custom:
  employeeTableName: employee-Details-${self:provider.stage}
  assignmentTableName: assignment-Details-${self:provider.stage}
  assetTableName: asset-Details-${self:provider.stage}
  bankTableName: bank
plugins:
  - serverless-iam-roles-per-function
functions:
  employeeCreate:
    handler: src/Lamda/employee/employeeCreateHandler.createEmployee
    name: employeeCreate
    memorySize: 128
    timeout: 120
    events:
      - http:
          path: employee
          method: POST
  assignmentCreate:
    handler: src/Lamda/assignment/assignmentHandler.createAssignment
    name: assignmentCreate
    memorySize: 128
    timeout: 120
    events:
      - http:
          path: assignment
          method: POST
  assignmentGet:
    handler: src/Lamda/employee/employeeCreateHandler.getAssignmentsByEmployeeId
    name: assignmentGet
    memorySize: 128
    timeout: 120
    events:
      - http:
          path: assignment/{employeeId}
          method: GET
  assetCreate:
    handler: src/Lamda/asset/assetHandler.createAsset
    name: assetCreate
    memorySize: 128
    timeout: 120
    events:
      - http:
          path: asset
          method: POST
  assetUpdate:
    handler: src/Lamda/employee/employeeCreateHandler.updateAssetDetails
    name: assetUpdate
    memorySize: 128
    timeout: 120
    events:
      - http:
          path: asset/{assetId}
          method: PUT
  bankCreate:
    handler: src/Lamda/bank/bankHandler.createBankDetails
    name: bankCreate
    memorySize: 128
    timeout: 120
    events:
      - http:
          path: bank
          method: POST
  bankGet:
    handler: src/Lamda/employee/employeeCreateHandler.getBankDetailsByEmployeeId
    name: bankGet
    memorySize: 128
    timeout: 120
    events:
      - http:
          path: bank/{employeeId}
          method: GET
  bankUpdate:
    handler: src/Lamda/employee/employeeCreateHandler.updateBankDetails
    name: bankUpdate
    memorySize: 128
    timeout: 120
    events:
      - http:
          path: bank/update/{bankId}
          method: PUT
resources:
  Resources:
    EmployeeTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.employeeTableName}
        AttributeDefinitions:
          - AttributeName: employeeId
            AttributeType: S
        KeySchema:
          - AttributeName: employeeId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    AssignmentTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.assignmentTableName}
        AttributeDefinitions:
          - AttributeName: assignmentId
            AttributeType: N
          - AttributeName: employeeId
            AttributeType: S
        KeySchema:
          - AttributeName: assignmentId
            KeyType: HASH
          - AttributeName: employeeId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: EmployeeIndex
            KeySchema:
              - AttributeName: employeeId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
    AssetTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.assetTableName}
        AttributeDefinitions:
          - AttributeName: assetId
            AttributeType:  N
        KeySchema:
          - AttributeName: assetId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    BankTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.bankTableName}
        AttributeDefinitions:
          - AttributeName: bankId
            AttributeType: N
          - AttributeName: employeeId
            AttributeType: S
        KeySchema:
          - AttributeName: bankId
            KeyType: HASH
          - AttributeName: employeeId
            KeyType: RANGE
        ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1